name: cd

on:
  push:
    branches: [main]

jobs:
  build_frontend:
    name: Build frontend
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/webjson-frontend:${{ github.sha }}

  build_api:
    name: Build api
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push web api
        uses: docker/build-push-action@v5
        with:
          context: ./api
          file: ${{ github.workspace }}/api/Dockerfile.web-api
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/webjson-web-api:${{ github.sha }}

      - name: Build and push public api
        uses: docker/build-push-action@v5
        with:
          context: ./api
          file: ${{ github.workspace }}/api/Dockerfile.public-api
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/webjson-public-api:${{ github.sha }}

  deploy_staging:
    name: Deploy to staging server
    needs: [build_frontend, build_api]
    runs-on: ubuntu-latest
    env:
      DB_URL: postgres://postgres:postgres@localhost:5432/webjson?sslmode=disable
    steps:
      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DROPLET_SSH_KEY }}

      - name: Copy over migration schemas
        run: |
          scp -r ./api/sql/schema billy@{{ secrets.DROPLET_IP }}:/home/billy/webjson/sql/schema/

      - name: SSH and pull
        run: |
          ssh -o StrictHostKeyChecking=no billy@${{ secrets.DROPLET_IP }} << 'EOF'
            cd /home/billy/webjson
            docker run --rm -v /home/billy/webjson/sql/schema:/migrations ghcr.io/pressly/goose postgres "$DB_URL" up
            echo SHA=${{ github.sha }} > .env
            docker compose pull
            docker compose up -d
          EOF
